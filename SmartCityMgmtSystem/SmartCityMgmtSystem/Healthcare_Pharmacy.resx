<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Label1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        GbnGUtgE05WAd4dlm42/x7BXHnFqAxCf01XQzfRhCMH/w40R7w6mnzFQPrSyhRzTGpzeAAQvBbIJZuiz
        fneHyCNdogEIroRX000uBxPwtvlZ/lGQV2vJMWyhyzQAQTFcDXh36KncalgVPZK/Mzwx9ttVBEHs3YE6
        zlbk7CWpSzXAkaB8yPnqzm1AeK2ukZq8s5jNHoRQKuhkOSlmCVOPlTby8u1PxA3dEarQzmDW5TpSyGqO
        lx3n5dsfea32a6rYjmb21QZaxgaCj5dP5OV3TMJrhQyq6I7E8KMsQsZapp4oW8fL7thE1Gp9wm8Ihztr
        T6De6S1lalFpMy77Dj/zrrjiiisWBv/WB3+f/x3Ge4xPGF8whjKGMfCXmkcwRjLGcHw44r/xM/wOfheP
        wWNxDBwLx8SxcY4u8XdFrzDwLzkGMUYzRBlHgXPi3FjDywyHph9jPIMqzBlgLZ8zHBac7H/dAAwuO2de
        Al4Mp10CVMxtgkMY0k0QMbcJip+LmyAe24mboEz2H/i2W3FMMLf4AAAAAElFTkSuQmCC
</value>
  </data>
</root>