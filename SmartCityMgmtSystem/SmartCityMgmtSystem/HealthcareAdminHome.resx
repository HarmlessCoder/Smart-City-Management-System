<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.ErrorImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAABItJREFUaEPVmm3oXmMcx/8b5rE0Ig8pVljyOGloLzS2d7IUTdM2kiSpPWivyDve
        aEieLRlDihe8IDEss/Kch/LCKJIxI7SMbD6fq/uX09m57v+5z7l3zn/f+tS5nn7nd859znX9rt+5J8ao
        s2E1vAAfwDbYAXsGeGydbfaxr2OmjM6DdyEcHhXHngu96lT4E3RoOzwCS+FCOA5mwrQBHltnm30eBcc4
        9g/QVm9aBTryKhxhxYhyjGO1oa3edD/oxMpUqpbtklPcjPtSqSe9BDpxVSpVa7ILuRpsfzGVetKHoBNz
        U6lak12I74ztzma96WfQieNT6X+F8zmKOgGs+ymVetChsBt2wXQrCio7XqYox2pDW9rsXKeBTm1Npbyq
        nC/rG7BPL1PwZeDJ30qlvOpcyNtgn0tTqWNdD558fSrlVedCngb7XJdKHesO8OT3wjkwHy4CQ5ZZ4Evs
        an4AHDg4Pgl8fM6HeeAYwxNtaEubnetxiLs9Lh6DzvUaePJ/4WPYDK4FX8HXYBxlxOtsZJ+Ifm37Auzr
        +/UZ2K4tbXauL8GT35BK7aQNbWmzc0XU67vQVrEoarNz/QOefEYqtdPBoC1tdq7Y/TkbtdXRoC3fq871
        OXhyp962csrWli9+53oSPPltqdROa0BbT6RSx1oEnvwTKAeNo8ixn4K2rrCia/mCRrB3rRUN5f5dGwaf
        2uxFXoBO/AqnWzGiZoNjtXGNFX3J7MhzoCP+OmdCXZ0F34JjnwFt9So3Q5tAh36HFTDsEbHNhIMpIMe8
        A71sqKqkc+tAx+QHeBAWg1GuePwQ2Bb9nKV6ey+GaQF8BOFoDpMWbsymvFwkb4dnwcdOPLZuSuV76+gw
        MLvizHQGnAyGMwfBlJOLmeHFclgLb8CP8DdUPVLB97ARzBXfCu4S2yyqjeQMczm4m3OjVOWoF2Keyk2U
        MZl4bF3uIg1CffzMWvpr7jO5374HnGKLDngxsagZd9nPfXpOttnHvo5xbPmG/AYPQJNFNqtT4Cko3km3
        qXfCBeAj4Uts/fNQV/Z1jGO1oS1tajvO4xZ4A+hDY2n8RoiFS6Mvg5mSsvzu4YXKiVZMIieB6F+1w/S9
        K968nWCEPOyXrpTpnOKdMWT3cRim4h2eTHV/Qc8Z2wV5H2r/OuacIjltRLoQ6ugScMx3YB4rJ9vsY1/H
        1JE+RKTthDEHhsrkWXwOew9G2cYa9JnmceyVVmRkm33sO0qgeBRsAcfqYzZP7J2K8MI5vsmntFvA8a+n
        UrVss499R5U+mQtzvGFO5TvjomaHX6D8vaOujgQnB5NyVVOndbbZx75NpG+R+FhmRVlxpTelUnM9DNox
        n1tW5Hjt00Y3g3beTKWSYlE7JpWay4BRO9o73IqBPI5ztM28HAva8ZfZSzbIOBR/ICimUyMtats4lPU3
        29BAsZc3wxKKD6dLUqm9sv5mGxrINGrET0YCFw+OXZ8OgXEo62+2oaHuBu0ZavhVy+O7YFzK+pttaChD
        CeOzvwZ43Cr4K6mzC1GvQNg14Bynsv5Gw/7GXqrqtD+AJib+A7ET+xXzTTP+AAAAAElFTkSuQmCC
</value>
  </data>
</root>